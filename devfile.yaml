apiVersion: 1.0.0
metadata:
  generateName: postit-app-

projects:

  - source:
      type: git
      location: 'https://github.com/sunix/quarkus-reactjs-postit-app'
    name: postit-app

  - source:
      type: zip
      location: 'https://github.com/redhat-developer-demos/quarkus-reactjs-postit-app/releases/download/20191216-local/local.zip'
    name: local


components:

  - alias: quarkus-backend-dev
    type: dockerimage
    image: quay.io/quarkus/centos-quarkus-maven:20.0.0-java8
    memoryLimit: 5Gi
    command: ['sleep']
    args: ['infinity']
    mountSources: true
    env:
      - name: MAVEN_OPTS
        value: '-Dmaven.repo.local=/projects/local/m2repo'
      - name: username
        value: 'user'
      - name: password
        value: 'password'
      - name: admin_password
        value: 'password'
      - name: uri
        value: 'mongodb://localhost'
    endpoints:
      - name: 'quarkus-dev'
        port: 8080

  - alias: node-frontend-dev
    mountSources: true
    image: 'quay.io/eclipse/che-nodejs8-centos:7.2.0'
    memoryLimit: 768Mi
    type: dockerimage
    endpoints:
      - name: '3000-tcp'
        port: 3000
    env:
      - name: FRONTEND_PORT
        value: '3000'

  - alias: quarkus-backend-native-prod
    type: dockerimage
    image: quay.io/quarkus/ubi-quarkus-native-image:19.2.0.1
    memoryLimit: 32M
    mountSources: true
    command: ['tail']
    args: ['-f', '/dev/null']
    endpoints:
      - name: '8080-tcp'
        port: 8080
    env:
      - name: username
        value: 'user'
      - name: password
        value: 'password'
      - name: admin_password
        value: 'password'
      - name: uri
        value: 'mongodb://localhost'

  - alias: mongo
    type: dockerimage
    image: centos/mongodb-34-centos7
    memoryLimit: 512Mi
    env:
     - name: MONGODB_USER
       value: user
     - name: MONGODB_PASSWORD
       value: password
     - name: MONGODB_DATABASE
       value: sampledb
     - name: MONGODB_ADMIN_PASSWORD
       value: password
    volumes:
     - name: mongo-storage
       containerPath: /var/lib/mongodb/data

  - alias: java
    type: chePlugin
    id: redhat/java/latest
    memoryLimit: 1536M

  - id: redhat/vscode-openshift-connector/latest
    type: chePlugin
    alias: vscode-openshift



  - alias: git
    type: dockerimage
    image: sunix/git-devtools
    mountSources: true
    memoryLimit: 64M
    args: ['sleep', 'infinity']

commands:

  - name: start DEVMODE quarkus-backend
    actions:
      - type: exec
        command: pkill java; mvn compile quarkus:dev
        component: quarkus-backend-dev
        workdir: /projects/postit-app/quarkus-backend

#  - name: build JVM quarkus-backend
#    actions:
#      - type: exec
#        command: pkill java; mvn package
#        component: quarkus-backend-dev
#        workdir: /projects/postit-app/quarkus-backend

  - name: build NATIVE quarkus-backend
    actions:
      - type: exec
        command: pkill java; mvn package -Pnative
        component: quarkus-backend-dev
        workdir: /projects/postit-app/quarkus-backend

  - name: run maven test quarkus-backend
    actions:
      - workdir: /projects/postit-app/quarkus-backend
        type: exec
        command: mvn clean test
        component: quarkus-backend-dev

  - name: start NATIVE quarkus-backend
    actions:
      - type: exec
        command: ./quarkus-backend-1.0.0-SNAPSHOT-runner -Dquarkus.http.host=0.0.0.0
        component: quarkus-backend-native-prod
        workdir: /projects/postit-app/quarkus-backend/target

  - name: connect java debugger quarkus-backend
    actions:
      - type: vscode-launch
        referenceContent: |
          {
          "version": "0.2.0",
          "configurations": [
            {
              "type": "java",
              "name": "Debug (Attach) - Remote",
              "request": "attach",
              "hostName": "localhost",
              "port": 5005
            }]
          }

  - name: start DEVMODE node-frontend
    actions:
      - type: exec
        command: tar zxvf /projects/local/node_modules.tar.gz ; rm /projects/local/node_modules.tar.gz ; npm run devmode
        component: node-frontend-dev
        workdir: /projects/postit-app/node-frontend/

  - name: oc - get node-frontend URL
    actions:
      - type: exec
        command: |-
                  echo node-frontend url http://$(oc get route node-frontend --template='{{ .spec.host }}')
        component: vscode-openshift
        workdir: /projects/postit-app/node-frontend/
  - name: tekton
    actions:
      - workdir: /usr/theia
        type: exec
        command: >-
          mkdir /home/theia/bin  2>/dev/null && cd /home/theia/bin && curl -LO
          https://github.com/tektoncd/cli/releases/download/v0.8.0/tkn_0.8.0_Linux_x86_64.tar.gz
          && tar xvzf tkn_0.8.0_Linux_x86_64.tar.gz -C /home/theia/bin/ tkn;
          export PATH=$PATH:/home/theia/bin;tkn help; bash
        component: vscode-openshift
